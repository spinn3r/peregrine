
- log output should be written to /var/log/peregrine-port/

- some items in StructReader and StructWriter need to be lenght prefixed.  For
  example byte[] and String.  However, this is redundand if they're the only
  item in the set.  Perhaps a fixed width version which doesn't require length prefixed.

    writeByteArray() writeByteArrayFixed() 
    readByteArray() readByteArrayFixed();

- I need to FULLY solve the issue of endianness in peregrine because ByteBuffer
  and netty will force me to solve it.

- Map and Reduce BOTH need to support merge() operations... We ALSO need to
  support APPEND to files ... so that a new Map or Reduce job can just write to
  the new file.

    - We can make pagerank work WITHOUT this thoug... MapperTask and MergerTask
      could in theory (now) be merged...

- The way we're handling broadcast values will yield TOO MANY values for chunks
  ... should I expose the listener interface for map jobs?

- Consider an implementation of this sorting algorithm that uses an in-place
  sort on disk with sequential IO which would allow us to use less disk space...

    - I don't really need to because once I'm done with chunks, I can write a
      progress file, delete the previous chunk file, then continue,  This would
      require CHUNK_SIZE additional bytes which isn't the end of the world.
  
- write a few tests of sequential pseudo sequential read and write IO
  performance.  This involved running two writers to two files on a single HDD
  ...

  Test these scenarios:

    - As writes come in , write them to individual files directly.
        - also test with fallocate() or say 500k-5MB extents
        
    - Buffered writes so that we lay them down as individual files but then
      reads have to jump over regions within the file.  This would yield a
      sequential file BUT I would have to seek over large portions of it...

        - 1000 partitions... writing to us in chunks

- support for doing a 'cat' of a file and factoring in the toString() methods of
  the underlying type... this will be used for debug purposes.

- It COULD be that MapOutputIndex is being corrupted... try to make THAT
  synchronous ... 
