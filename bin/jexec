#!/bin/bash

#ssh -L 8849:example.com:8849 root@example.com
export PROFILER_ENABLED=false

LIB_ROOT=lib

NEW_CLASSPATH=$(find $LIB_ROOT -name "*.jar" -exec echo -n "{}": ";")

ulimit -n 1000000 2> /dev/null

CLASSNAME=$1

if [ "$JAVA_HOME" = "" ]; then

    if [ -d "/usr/local/java/jdk-LATEST" ]; then
        export JAVA_HOME=/usr/local/java/jdk-LATEST
    elif [ -d "/usr/local/jdk" ]; then
        export JAVA_HOME=/opt/jdk
    elif [ -d "/opt/jdk" ]; then
        export JAVA_HOME=/opt/jdk
    fi

fi

NEW_CLASSPATH="$JAVA_HOME/lib/tools.jar:./compile:./compile/classes:$NEW_CLASSPATH:"

if [ -o "$BE_QUIET" ]; then
  set -bx
fi

export CLASSPATH=$NEW_CLASSPATH

if [ "$MIN_MEMORY" = "" ]; then
    export MIN_MEMORY=32M
fi

if [ "$MAX_MEMORY" = "" ]; then
    export MAX_MEMORY=1500M
fi

export PROFILER_PATH="/usr/local/jprofiler"
export PROFILER_OPTS="-agentlib:jprofilerti=port=8849 \
                      -Xint \
                      -Xbootclasspath/a:$PROFILER_PATH/bin/agent.jar"

if [ "$PROFILER_ENABLED" = "true" ]; then

    echo "Running with profiler..."

    # FIXME: make sure the profiler is installed correctly.

    export JAVA_OPTS="$JAVA_OPTS $PROFILER_OPTS"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PROFILER_PATH/bin/linux-x64/"
    echo $LD_LIBRARY_PATH

fi

if [ "$JAVA" = "" ]; then
    #use the default Java VM.
    JAVA=java
fi

if [ "$2" != "" ]; then

    shift

    $JAVA -Djava.awt.headless=true \
      -Xms$MIN_MEMORY \
      -Xmx$MAX_MEMORY \
      $JAVA_OPTS \
      $CLASSNAME "$@"

else
    $JAVA -Djava.awt.headless=true \
        -Xms$MIN_MEMORY \
        -Xmx$MAX_MEMORY \
        $JAVA_OPTS \
        $CLASSNAME 

fi

result=$?

set +bx

exit $result
