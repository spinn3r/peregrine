#!/bin/bash

### 
# 
# Java execution script which wraps the JVM so we can easily turn on profiling,
# change memory settings, and apply default values for memory, etc.

CLASSNAME=$1
shift

run() {

    echo $@ > /dev/stderr
    $@
    result=$?
    return $result

}

## set default variables.
: ${MAX_MEMORY:="128M"}
: ${MAX_DIRECT_MEMORY:="128M"}
: ${JAVA:="java"}
: ${SILENT:="false"}
: ${PROFILER_ENABLED:="false"}
: ${PROFILER_PATH:="/usr/local/jprofiler"}
: ${PROFILER_OPTS:="-agentlib:jprofilerti=port=8849 -Xint -Xbootclasspath/a:$PROFILER_PATH/bin/agent.jar"}

# TODO: would be nice to not have to use sed here.

# allows us to use bash completion to pick a .java file and then run it directly.
CLASSNAME=$(echo $CLASSNAME | sed 's/src\/test\///g' | sed 's/src\/java\///g' | sed  's/.java//g' | sed 's/\//./g' )

if [ "$PROFILER_ENABLED" = "true" ]; then

    echo "Running with profiler..."

    export JAVA_OPTS="$JAVA_OPTS $PROFILER_OPTS"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PROFILER_PATH/bin/linux-x64/"
    echo $LD_LIBRARY_PATH

fi

set -o noglob

export CLASSPATH=target/compile:lib/*:lib/optional/cassandra/*

run $JAVA \
  -XX:MaxDirectMemorySize=$MAX_DIRECT_MEMORY \
  -Xms$MAX_MEMORY \
  -Xmx$MAX_MEMORY \
  $JAVA_OPTS \
  $CLASSNAME "$@"

result=$?

exit $result
