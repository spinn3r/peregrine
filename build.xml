<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="peregrine" default="jar" basedir=".">
  
    <!--
    export ANT_OPTS=-Xmx256M 
    -->

    <property environment="env"/>

    <property file="build.properties"/>

    <property name="project"         value="peregrine"/>
    <property name="javadocdir"      value="target/javadoc"/>
    <property name="version"         value="0.5.3"/>

    <property name="haltonfailure"   value="false"/>
    <property name="haltonerror"     value="false"/>

    <property name="junit.timeout"   value="2000000"/>

    <path id="project.classpath">

        <pathelement location="target/compile"/>

        <fileset dir="lib">

             <include name="*.jar"/>
             <include name="build/*.jar"/>
             <include name="optional/**/*.jar"/>

        </fileset>

    </path>

    <property name="clover.jar" location="lib/build/clover-ant-3.1.2.jar"/>

    <taskdef resource="cloverlib.xml" classpath="${clover.jar}"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/build/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <target name="with.clover">
        <clover-setup/>
    </target>

    <target name="clover.html">
        <clover-html-report outdir="target/coverage" title="Peregrine ${version}"/>
    </target>

    <target name="compile">

        <mkdir dir="target/compile"/>

        <depend srcdir="src/java"
                destdir="target/compile"
                cache="target/depcache"
                dump="false"
                closure="no"/>

        <javac classpathref="project.classpath"
               nowarn="on"
               source="1.6"
               target="1.6"
               srcdir="src/java"
               destdir="target/compile"
               fork="true"
               memoryMaximumSize="512M"
               deprecation="no"
               debug="true">

            <!-- <compilerarg value="-Xlint"/>-->
          
            <include name="**/*.java"/>
            <exclude name="**/*SExpander.java"/>
        </javac>

    </target>
    
    <target name="clean">
        <delete dir="clover.html"/>
        <delete dir=".clover"/>
        <delete dir="compile"/>
        <delete dir="target"/>

        <delete>
            <fileset dir="lib">
                <include name="${project}*.jar"/>
            </fileset>
        </delete>

    </target>

    <target name="jar" depends="compile">

        <mkdir dir="target"/>

        <copy file="conf/peregrine.conf" tofile="target/compile/default.conf" />

        <jar compress="yes" jarfile="lib/${project}-${version}.jar">

            <fileset dir="target/compile">

                <include name="com/**"/>
                <include name="org/**"/>
                <include name="peregrine/**"/>
                <include name="default.conf"/>
            
            </fileset>

        </jar>

    </target>

    <target name="compile.test">

        <depend srcdir="src/test"
                destdir="target/compile"
                cache="target/depcache"
                dump="false"
                closure="no"/>

        <javac classpathref="project.classpath"
               nowarn="on"
               source="1.6"
               target="1.6"
               srcdir="src/test"
               destdir="target/compile"
               fork="true"
               memoryMaximumSize="512M"
               deprecation="no"
               debug="true">
            <include name="**/*.java"/>
            <exclude name="**/*SExpander.java"/>
        </javac>

    </target>

    <target name="test" 
            depends="jar, compile.test, test-basic, test-multi, test-report" 
            description="Run junit tests.">

        <available property="test.failed" file="target/test-failed.true" />

        <echo message="test.failed (fail(3)): ${test.failed}"/>

        <fail if="test.failed"/>

    </target> 

    <target name="test-basic">

        <tstamp>
            <format property="ts" pattern="yyyyMMdd-HHmmss" locale="GMT"/>
        </tstamp>

        <taskdef name="junit"
                 classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
            <classpath refid="project.classpath"/>
        </taskdef>	

        <mkdir dir="target/test-reports/${ts}" />

        <junit printsummary="withOutAndErr"
               fork="true"
               forkmode="perTest"
               timeout="${junit.timeout}"
               maxmemory="1024m"
               filtertrace="false"
               haltonfailure="${haltonfailure}"
               haltonerror="${haltonerror}"
               failureproperty="junit.failed"
               errorproperty="junit.errored"
               showoutput="true" 
               logfailedtests="true">

            <formatter type="plain" usefile="true" />
            <formatter type="xml"   usefile="true" />

            <classpath>
                <path refid="project.classpath"/>
            </classpath>

            <batchtest todir="target/test-reports/${ts}"> 

                <fileset dir="src/test">

                  <include name="peregrine/TestNothing.java"/>
                  
                  <include name="**/Test*.java"/>

                  <exclude name="peregrine/TestChunkWriterCloseOnReferenceCount.java"/>
                  <exclude name="peregrine/io/driver/cassandra/TestCassandra.java"/>
                  <exclude name="peregrine/TestWorkerFailureDuringJob.java"/>
                  <exclude name="peregrine/TestWikirank.java"/>
                  
                </fileset>

            </batchtest>
            
        </junit>

        <echo message="junit.failed: ${junit.failed}"/>
        <echo message="junit.errored: ${junit.errored}"/>

        <condition property="test.failed">
            <or>
                <istrue value="${junit.failed}"/>
                <istrue value="${junit.errored}"/>
            </or>
        </condition>

        <echo message="test.failed: ${test.failed}"/>

        <touch file="target/test-failed.${test.failed}" />

    </target>

    <target name="test-multi"
            depends="jar,compile.test">

      <foreach list="${multi.factors}" 
               param="peregrine.test.factor" 
               delimiter=","
               target="test-multi-with-configs">

      </foreach>

    </target>

    <target name="test-multi-with-configs">

      <foreach list="${multi.configs}" 
               param="peregrine.test.config" 
               delimiter=" "
               target="test-multi-exec">

      </foreach>

    </target>

    <target name="test-multi-exec">

        <tstamp>
            <format property="ts" pattern="yyyyMMdd-HHmmss" locale="GMT"/>
        </tstamp>

        <taskdef name="junit"
                 classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"> 
            <classpath refid="project.classpath"/>
        </taskdef>	

        <echo message="peregrine.test.config: ${peregrine.test.config}"/>

        <mkdir dir="target/test-reports/${ts}" />

        <junit printsummary="withOutAndErr"
               fork="true"
               forkmode="perTest"
               timeout="${junit.timeout}"
               maxmemory="1024m"
               filtertrace="false"
               haltonfailure="${haltonfailure}"
               haltonerror="${haltonerror}"
               failureproperty="junit.failed"
               errorproperty="junit.errored"
               showoutput="true" 
               logfailedtests="true">

            <jvmarg value="-Dperegrine.test.config=${peregrine.test.config}"/>
            <jvmarg value="-Dperegrine.test.factor=${peregrine.test.factor}"/>

            <formatter type="plain" usefile="true" />
            <formatter type="xml"   usefile="true" />

            <classpath>
                <path refid="project.classpath"/>
            </classpath>

            <batchtest todir="target/test-reports/${ts}"> 

                <fileset dir="src/test">

                  <include name="peregrine/globalsort/TestSortViaMapReduce.java"/>
                  <include name="peregrine/TestCombinerWithinReduce.java"/>
                  <include name="peregrine/TestMapReduceWithMergeFactor.java"/>
                  <include name="peregrine/TestBroadcastMapReduce.java"/>
                  <include name="peregrine/TestDataImbalance.java"/>
                  <include name="peregrine/TestMapReduce.java"/>

                  <include name="peregrine/TestNewReduceCode.java"/>
                  <include name="peregrine/TestPagerank.java"/>
                  <include name="peregrine/TestPagerankAccuracy.java"/>
                  <include name="peregrine/io/partition/TestDefaultPartitionWriter.java"/>
                  <include name="peregrine/pfs/TestRemoteChunkWriterClient.java"/>
                  <include name="peregrine/pfsd/TestExtractWriterPerformance.java"/>
                  <include name="peregrine/pfsd/TestFanoutWritePerformance.java"/>
                  <include name="peregrine/shuffle/TestShufflePerformance.java"/>

                  <exclude name="peregrine/io/driver/cassandra/TestCassandra.java"/>
                  <exclude name="peregrine/TestWorkerFailureDuringJob.java"/>
                  <exclude name="peregrine/TestWikirank.java"/>

                </fileset>

            </batchtest>
            
        </junit>

        <echo message="junit.failed: ${junit.failed}"/>
        <echo message="junit.errored: ${junit.errored}"/>

        <condition property="test.failed">
            <or>
                <istrue value="${junit.failed}"/>
                <istrue value="${junit.errored}"/>
            </or>
        </condition>

        <echo message="test.failed: ${test.failed}"/>

        <touch file="target/test-failed.${test.failed}" />

    </target> 

    <target name="test-large" description="Run a job that uses a LOT of data on disk to test for memory leaks with mapping and reading IO.">

        <property name="peregrine.test.factor" value="5000"/>
        <property name="peregrine.test.config" value="1:1:1"/>

        <tstamp>
            <format property="ts" pattern="yyyyMMdd-HHmmss" locale="GMT"/>
        </tstamp>

        <taskdef name="junit"
                 classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"> 
            <classpath refid="project.classpath"/>
        </taskdef>	

        <echo message="peregrine.test.config: ${peregrine.test.config}"/>

        <mkdir dir="target/test-reports/${ts}" />

        <junit printsummary="withOutAndErr"
               fork="true"
               forkmode="perTest"
               timeout="${junit.timeout}"
               maxmemory="1024m"
               filtertrace="false"
               haltonfailure="${haltonfailure}"
               haltonerror="${haltonerror}"
               failureproperty="junit.failed"
               errorproperty="junit.errored"
               showoutput="true" 
               logfailedtests="true">

            <jvmarg value="-Dperegrine.test.config=${peregrine.test.config}"/>
            <jvmarg value="-Dperegrine.test.factor=${peregrine.test.factor}"/>

            <formatter type="plain" usefile="true" />
            <formatter type="xml"   usefile="true" />

            <classpath>
                <path refid="project.classpath"/>
            </classpath>

            <batchtest todir="target/test-reports/${ts}"> 

                <fileset dir="src/test">
                  <include name="peregrine/TestMapReduce.java"/>
                </fileset>

            </batchtest>
            
        </junit>

        <echo message="junit.failed: ${junit.failed}"/>
        <echo message="junit.errored: ${junit.errored}"/>

        <condition property="test.failed">
            <or>
                <istrue value="${junit.failed}"/>
                <istrue value="${junit.errored}"/>
            </or>
        </condition>

        <echo message="test.failed: ${test.failed}"/>

        <touch file="target/test-failed.${test.failed}" />

    </target> 

    <target name="test-report">

        <junitreport todir="target/test-reports">

            <fileset dir="target/test-reports">
                <include name="**/TEST-*.xml"/>
            </fileset>

            <report format="frames" todir="./target/test-reports"/>

        </junitreport>

        <echo message="Wrote test-reports successfully." />

    </target>

    <target name="javadoc" description="Generate javadoc" depends="compile">

        <mkdir dir="${javadocdir}"/>
        <tstamp>
            <format pattern="2000-yyyy" property="year"/>
        </tstamp>

        <property name="copyright" value="Copyright &amp;copy; 2011 Kevin Burton. All Rights Reserved."/>
        <property name="title" value="Peregrine ${version} API"/>
    
        <javadoc bottom="Copyright &amp;copy; 2011 Kevin Burton. All Rights Reserved." 
                 access="public"
                 windowtitle="Peregrine ${version} API" 
                 use="true" 
                 private="false" 
                 destdir="${javadocdir}" 
                 author="true" 
                 doctitle="Peregrine ${version} API" 
                 version="true" 
                 sourcepath="src/java" 
                 classpathref="project.classpath"
                 overview="src/javadoc/overview.html"
                 stylesheetfile="src/javadoc/stylesheet.css"
                 packagenames="peregrine.*">

            <group title="Core" packages="peregrine"/>
            <group title="Example applications" packages="peregrine.app*"/>
            <group title="Controller" packages="peregrine.controller*"/>
            <group title="Config" packages="peregrine.config*"/>
            <group title="IO" packages="peregrine.io*"/>
            <group title="Shuffling" packages="peregrine.shuffle*"/>
            <group title="Util" packages="peregrine.util*"/>
            <group title="Worker" packages="peregrine.worker*"/>
            <group title="Sort and merge backend for shuffle/reduce phase." packages="peregrine.reduce*,peregrine.combine*"/>
            <group title="RPC framework" packages="peregrine.rpc*"/>
            <group title="Console" packages="peregrine.console*"/>
          
        </javadoc>
        
        <copy todir="${javadocdir}/resources" >
          
            <fileset dir="src/javadoc/resources" />

        </copy>

  </target>

    <target name="jxr">

        <exec executable="mvn">
            <arg value="jxr:jxr"/>
        </exec>

    </target>

    <target name="static">

        <exec executable="hg" dir="../peregrine-website">
            <arg value="pull"/>
            <arg value="-u"/>
        </exec>

        <!--
        <exec executable="/var/lib/gems/1.8/bin/awestruct" dir="../peregrine-website">
            <arg value="-g"/>
        </exec>
        -->

    </target>

    <target name="coverage"  
            depends="clean, with.clover, jar, compile.test, test-basic, test-multi, clover.html, test-report">

        <available property="test.failed" file="target/test-failed.true" />

        <echo message="test.failed (fail(3)): ${test.failed}"/>

        <fail if="test.failed"/>

    </target>

    <target name="coverage-simple" 
            depends="clean, with.clover, jar, compile.test, test-simple, clover.html, test-report">
    </target>

    <target name="test-simple">

        <property name="peregrine.test.factor"   value="1"/>
        <property name="peregrine.test.config"   value="1:1:1"/>

        <tstamp>
            <format property="ts" pattern="yyyyMMdd-HHmmss" locale="GMT"/>
        </tstamp>

        <taskdef name="junit"
                 classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"> 
            <classpath refid="project.classpath"/>
        </taskdef>	

        <echo message="peregrine.test.config: ${peregrine.test.config}"/>

        <mkdir dir="target/test-reports/${ts}" />

        <junit printsummary="withOutAndErr"
               fork="true"
               forkmode="perTest"
               timeout="${junit.timeout}"
               maxmemory="1024m"
               filtertrace="false"
               haltonfailure="${haltonfailure}"
               haltonerror="${haltonerror}"
               failureproperty="junit.failed"
               errorproperty="junit.errored"
               showoutput="true" 
               logfailedtests="true">

            <jvmarg value="-Dperegrine.test.config=${peregrine.test.config}"/>
            <jvmarg value="-Dperegrine.test.factor=${peregrine.test.factor}"/>

            <formatter type="plain" usefile="true" />
            <formatter type="xml"   usefile="true" />

            <classpath>
                <path refid="project.classpath"/>
            </classpath>

            <batchtest todir="target/test-reports/${ts}"> 

                <fileset dir="src/test">

                  <!-- <include name="peregrine/globalsort/TestSortViaMapReduce.java"/> -->
                  <!-- <include name="peregrine/TestCombinerWithinReduce.java"/> -->
                  <!-- <include name="peregrine/TestMapReduceWithMergeFactor.java"/> -->
                  <!-- <include name="peregrine/TestBroadcastMapReduce.java"/> -->
                  <!-- <include name="peregrine/TestDataImbalance.java"/> -->
                  <include name="peregrine/TestMapReduce.java"/>

                  <!-- <include name="peregrine/TestNewReduceCode.java"/> -->
                  <!-- <include name="peregrine/TestPagerank.java"/> -->
                  <!-- <include name="peregrine/TestPagerankAccuracy.java"/> -->
                  <!-- <include name="peregrine/io/partition/TestDefaultPartitionWriter.java"/> -->
                  <!-- <include name="peregrine/pfs/TestRemoteChunkWriterClient.java"/> -->
                  <!-- <include name="peregrine/pfsd/TestExtractWriterPerformance.java"/> -->
                  <!-- <include name="peregrine/pfsd/TestFanoutWritePerformance.java"/> -->
                  <!-- <include name="peregrine/shuffle/TestShufflePerformance.java"/> -->

                  <!-- <exclude name="peregrine/io/driver/cassandra/TestCassandra.java"/> -->
                  <!-- <exclude name="peregrine/TestWorkerFailureDuringJob.java"/> -->
                  <!-- <exclude name="peregrine/TestWikirank.java"/> -->

                </fileset>

            </batchtest>
            
        </junit>

        <echo message="junit.failed: ${junit.failed}"/>
        <echo message="junit.errored: ${junit.errored}"/>

        <condition property="test.failed">
            <or>
                <istrue value="${junit.failed}"/>
                <istrue value="${junit.errored}"/>
            </or>
        </condition>

        <echo message="test.failed: ${test.failed}"/>

        <touch file="target/test-failed.${test.failed}" />

    </target> 

    <target name="site.update">

        <copy todir="../peregrine_mapreduce.bitbucket.org" >
            <fileset dir="../peregrine-website/_site/" />
        </copy>

        <move file="target/javadoc"       todir="../peregrine_mapreduce.bitbucket.org" />
        <move file="target/xref"          todir="../peregrine_mapreduce.bitbucket.org" />
        <move file="target/coverage"      todir="../peregrine_mapreduce.bitbucket.org" />
        <move file="target/test-reports"  todir="../peregrine_mapreduce.bitbucket.org" />

    </target>

    <target name="site" depends="clean,coverage,javadoc,jxr,static,site.update">

      <!--
          
          we need awestruct, hg, mvn

          apt-get install ruby rubygems

          gem install fssm awestruct disqus rb-fsevent

      -->

    </target>

    <target name="tar.gz">

        <mkdir dir="target/peregrine-${version}" />
        <copy todir="target/peregrine-${version}">

            <fileset dir=".">
                 <include name="README.txt"/>
                 <include name="LICENSE.txt"/>
                 <include name="build.xml"/>
                 <include name="bin/**"/>
                 <include name="conf/**"/>
                 <include name="lib/**"/>
                 <include name="src/**"/>

                 <exclude name="lib/build/clover*.jar"/>

            </fileset>

            <fileset dir="target/compile">
                 <include name="javadoc/**"/>
            </fileset>

        </copy>

        <tar destfile="target/peregrine-${version}.tar.gz"
             longfile="gnu"
             compression="gzip">

            <tarfileset dir="target" filemode="755">
                <include name="peregrine-${version}/bin/**"/>
            </tarfileset>

            <tarfileset dir="target">
                <include name="peregrine-${version}/**"/>
                <exclude name="peregrine-${version}/bin/**"/>
            </tarfileset>

        </tar>

    </target>

    <target name="dist" depends="clean, jar, javadoc, tar.gz">

    </target>

</project>

