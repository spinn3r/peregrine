<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="peregrine" default="jar" basedir=".">

    <property environment="env"/>

    <property file="build.properties"/>

    <property name="project" value="peregrine"/>
    <property name="javadocdir" value="compile/javadoc"/>
    <property name="version" value="0.4.0"/>

    <path id="project.classpath">

        <pathelement location="compile"/>

        <fileset dir="lib">
             <include name="*.jar"/>
        </fileset>

    </path>

    <property name="clover.jar" location="lib/build/clover-ant-3.1.2.jar"/>

    <taskdef resource="cloverlib.xml" classpath="${clover.jar}"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/build/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <target name="with.clover">
        <clover-setup/>
    </target>

    <target name="clover.html">
        <clover-html-report outdir="clover_html" title="Peregrine ${version}"/>
    </target>

    <target name="compile">

        <mkdir dir="compile"/>

        <javac classpathref="project.classpath"
               nowarn="on"
               source="1.6"
               target="1.6"
               srcdir="src/java"
               destdir="compile"
               fork="true"
               memoryMaximumSize="512M"
               deprecation="no"
               debug="true">
            <include name="**/*.java"/>
            <exclude name="**/*SExpander.java"/>
        </javac>

    </target>
    
    <target name="clean">
        <delete dir="clover.html"/>
        <delete dir=".clover"/>
        <delete dir="compile"/>
        <delete dir="target"/>
        <delete file="lib/${project}-${version}.jar"/>

    </target>

    <target name="jar" depends="compile">

        <mkdir dir="target"/>

        <copy file="conf/peregrine.conf" tofile="compile/default.conf" />

        <jar compress="yes" jarfile="lib/${project}-${version}.jar">

            <fileset dir="compile">

                <include name="com/**"/>
                <include name="org/**"/>
                <include name="peregrine/**"/>
                <include name="default.conf"/>
            
            </fileset>

        </jar>

    </target>

    <target name="compile.test">

        <javac classpathref="project.classpath"
               nowarn="on"
               source="1.6"
               target="1.6"
               srcdir="src/test"
               destdir="compile"
               fork="true"
               memoryMaximumSize="512M"
               deprecation="no"
               debug="true">
            <include name="**/*.java"/>
            <exclude name="**/*SExpander.java"/>
        </javac>

    </target>

    <target name="test" 
            depends="jar,compile.test" 
            description="Run junit tests.">

        <taskdef name="junit"
                 classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
            <classpath refid="project.classpath"/>
        </taskdef>	

        <junit printsummary="withOutAndErr"
               fork="true"
               forkmode="perTest"
               timeout="1000000"
               maxmemory="512m"
               filtertrace="false"
               haltonfailure="true"
               haltonerror="true"
               showoutput="true" 
               logfailedtests="true">

            <formatter type="plain" usefile="false" />

            <classpath>
                <path refid="project.classpath"/>
            </classpath>

            <batchtest todir="target/test-reports"> 

                <fileset dir="src/test">
                    <include name="**/Test*.java"/>
                </fileset>

            </batchtest>
            
        </junit>

        <antcall target="test-multi" />

    </target> 

    <target name="test-multi"
            depends="jar,compile.test">

      <foreach list="1" 
               param="peregrine.test.factor" 
               target="test-multi-with-configs">

      </foreach>

    </target>

    <target name="test-multi-with-configs">
      
      <!-- 
        Define muliple config test in the form of:

        concurrency:replicas:hosts 

        one per line.

        TODO we are not testing three replica configs right now as we
        have some known bugs here and it isn't important at the moment.

                               01:03:04
                               01:03:08
                               01:03:16
                               01:03:24
                               01:03:32
                               02:03:08
                               02:03:16
                               02:03:24
                               02:03:32
                               04:03:16
                               04:03:24
                               04:03:32
                               08:03:32

                               01:02:04
                               01:02:08
                               01:02:16
                               01:02:24
                               01:02:32
                               02:02:08
                               02:02:16
                               02:02:24
                               02:02:32
                               04:02:16
                               04:02:24
                               04:02:32
                               08:02:24
                               08:02:32

                               01:01:08
                               01:01:16
                               01:01:24
                               01:01:32

                               02:01:08
                               02:01:16
                               02:01:24
                               02:01:32

                               02:01:08
                               02:01:16
                               02:01:24
                               02:01:32
                               04:01:01
                               04:01:08
                               04:01:16
                               04:01:24
                               04:01:32
                               08:01:32

      -->
      <property name="configs">01:01:01
                               01:01:02
                               01:01:04
                               02:01:01
                               02:01:04
      </property>

      <foreach list="${configs}" 
               param="peregrine.test.config" 
               delimiter=" "
               target="test-multi-exec">

      </foreach>

    </target>

    <target name="test-multi-exec">

      <taskdef name="junit"
               classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
          <classpath refid="project.classpath"/>
      </taskdef>	

      <echo message="peregrine.test.config: ${peregrine.test.config}"/>

        <junit printsummary="withOutAndErr"
               fork="true"
               forkmode="perTest"
               timeout="1000000"
               maxmemory="512m"
               filtertrace="false"
               haltonfailure="true"
               haltonerror="true"
               showoutput="true" 
               logfailedtests="true">

            <jvmarg value="-Dperegrine.test.config=${peregrine.test.config}"/>
            <jvmarg value="-Dperegrine.test.factor=${peregrine.test.factor}"/>

            <formatter type="plain" usefile="false" />

            <classpath>
                <path refid="project.classpath"/>
            </classpath>

            <batchtest todir="target/test-reports"> 

                <fileset dir="src/test">

                  <include name="peregrine/TestPagerank.java"/>
                  
                  <include name="peregrine/TestMapReduce.java"/>
                  <include name="peregrine/io/partition/TestDefaultPartitionWriter.java"/>
                  <include name="peregrine/pfs/TestRemoteChunkWriterClient.java"/>
                  <include name="peregrine/pfsd/TestExtractWriterPerformance.java"/>
                  <include name="peregrine/pfsd/TestFanoutWritePerformance.java"/>
                  <include name="peregrine/shuffle/TestShufflePerformance.java"/>
                  <include name="peregrine/TestBroadcastMapReduce.java"/>

                </fileset>

            </batchtest>
            
        </junit>

    </target> 

  <target name="javadoc" description="Generate javadoc" depends="compile">

    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2000-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy; 2011 Kevin Burton. All Rights Reserved.">
    </property>
    <property name="title" value="Peregrine API">
    </property>

    <javadoc bottom="Copyright &amp;copy; 2011 Kevin Burton. All Rights Reserved." 
             windowtitle="Peregrine ${version} API" 
             use="true" 
             private="false" 
             destdir="${javadocdir}" 
             author="true" 
             doctitle="Peregrine ${version} API" 
             version="true" 
             sourcepath="src/java" 
             classpathref="project.classpath"
             overview="src/javadoc/overview.html"
             stylesheetfile="src/javadoc/stylesheet.css"
             packagenames="peregrine.*">

        <group title="Core" packages="peregrine"/>
        <group title="Example applications" packages="peregrine.app*"/>
        <group title="Controller" packages="peregrine.controller*"/>
        <group title="Config" packages="peregrine.config*"/>
        <group title="IO" packages="peregrine.io*"/>
        <group title="Shuffling" packages="peregrine.shuffle*"/>
        <group title="Util" packages="peregrine.util*"/>
        <group title="PFSd" packages="peregrine.pfsd*"/>
        <group title="Sort and merge backend for shuffle/reduce phase." packages="peregrine.reduce*"/>
        <group title="RPC framework" packages="peregrine.rpc*"/>
      
    </javadoc>

    <copy todir="${javadocdir}/resources" >

      <fileset dir="src/javadoc/resources" />

    </copy>

  </target>

  <target name="jxr">

    <exec executable="mvn">
      <arg value="jxr:jxr"/>
    </exec>

  </target>

  <target name="static">

    <exec executable="awestruct" dir="../peregrine-website">
      <arg value="-g"/>
    </exec>

  </target>

    <target name="site" depends="javadoc,jxr,static">

        <move file="compile/javadoc" todir="../peregrine_mapreduce.bitbucket.org" />
        <move file="target/xref"     todir="../peregrine_mapreduce.bitbucket.org" />

        <copy todir="../peregrine_mapreduce.bitbucket.org" >
            <fileset dir="../peregrine-website/_site/" />
        </copy>

    </target>

    <target name="tar.gz">

        <mkdir dir="target/peregrine-${version}" />
        <copy todir="target/peregrine-${version}">

            <fileset dir=".">
                 <include name="README"/>
                 <include name="build.xml"/>
                 <include name="bin/**"/>
                 <include name="conf/**"/>
                 <include name="lib/**"/>
                 <include name="src/**"/>
            </fileset>

            <fileset dir="compile">
                 <include name="javadoc/**"/>
            </fileset>

        </copy>

        <tar destfile="target/peregrine-${version}.tar.gz"
             longfile="gnu"
             compression="gzip">

            <tarfileset dir="target" filemode="755">
                <include name="peregrine-${version}/bin/**"/>
            </tarfileset>

            <tarfileset dir="target">
                <include name="peregrine-${version}/**"/>
                <exclude name="peregrine-${version}/bin/**"/>
            </tarfileset>

        </tar>

    </target>

    <target name="dist" depends="clean, jar, javadoc, tar.gz">

    </target>

</project>
